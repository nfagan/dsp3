function dsp3_plot_bar_coherence()

rev_types = dsp3.get_rev_types();

is_new_data = true;

if ( is_new_data )
  load_func_inputs = { 'load_func', @load_new_data };
else
  load_func_inputs = {};
end

%%

rev_t = 'orig';
bands = dsp3.get_bands( 'map' );

epochs = { 'targon', 'targacq' };
band_names = { 'beta', 'new_gamma' };
cond_combs = dsp3.numel_combvec( epochs, band_names );

for i = 1:size(cond_combs, 2)
  
base_subdir = '';

c = cond_combs(:, i);

epoch = epochs{c(1)};
freq_roi = band_names{c(2)};

switch ( epoch )
  case 'targon'
    mask_inputs = {@find, 'cued'};
    t_window = [0, 250];
  case 'targacq'
    mask_inputs = {@find, 'choice'};
    t_window = [-250, 0];
  otherwise
    error( 'Unrecognized epoch "%s".', epoch );
end

bar_ylims = [ -14e-3, 6e-3 ];

freq_window = bands(freq_roi);

base_prefix = sprintf( '%s__%s', freq_roi, epoch );
base_subdir = sprintf( '%s%s', base_subdir, rev_t );

stats__proanti_coh( ...
    'is_z', false ...
  , 'is_cached', false ...
  , 'smooth_func', @(x) x ...
  , 'drug_type', 'nondrug_nanmedian' ...
  , 'is_pro_minus_anti', false ...
  , 'spectra', true ...
  , 'specificity', 'sites' ...
  , 'epochs', epoch ...
  , 'do_save', true ...
  , 'base_subdir', base_subdir ...
  , 'remove', rev_types(rev_t) ...
  , 'bar_mask_inputs', mask_inputs ...
  , 'line_mask_inputs', mask_inputs ...
  , 'base_prefix', base_prefix ...
  , 'time_window', t_window ...
  , 'freq_window', freq_window ...
  , 'bar_ylims', bar_ylims ...
  , 'line_ylims', [-0.02, 0.02] ...
  , 'spectral_time_window', [-350, 300] ...
  , 'spectral_freq_window', [0, 100] ...
  , 'spectral_clims', [-7e-3, 7e-3] ...
  , 'stretch_spectral_ylims', false ...
  , 'plot_bar', false ...
  , 'plot_lines', true ...
  , load_func_inputs{:} ...
);

end

%%

rev_t = 'revB';
bands = dsp3.get_bands( 'map' );

mask_inputs = {@find, {'targon', 'cued'}, @find, {'targacq', 'choice'}};

bar_ylims = [ -14e-3, 6e-3 ];

band_names = { 'beta', 'new_gamma' };
cond_combs = dsp3.numel_combvec( band_names );

for i = 1:size(cond_combs, 2)

freq_roi = band_names{cond_combs(1, i)};
freq_window = bands(freq_roi);

epoch = '';
base_prefix = sprintf( '%s__%s', freq_roi, epoch );
base_subdir = sprintf( '%s2', rev_t );

stats__proanti_coh( ...
    'is_z', false ...
  , 'is_pro_minus_anti', true ...
  , 'spectra', true ...
  , 'specificity', 'sites' ...
  , 'epochs', {'targon', 'targacq'} ...
  , 'do_save', true ...
  , 'base_subdir', base_subdir ...
  , 'remove', rev_types(rev_t) ...
  , 'bar_mask_inputs', mask_inputs ...
  , 'base_prefix', base_prefix ...
  , 'time_window', t_window ...
  , 'freq_window', freq_window ...
  , 'bar_ylims', bar_ylims ...
  , 'plot_lines', true ...
  , 'spectral_clims', [-7e-3, 7e-3] ...
  , load_func_inputs{:} ...
);

end

end

function [data, labels, freqs, t] = load_new_data(params, varargin)

import shared_utils.io.fullfiles;

epochs = params.epochs;
file_ps = dsp3.get_intermediate_dir( fullfiles('original_summarized_coherence', epochs), params.config );
mats = shared_utils.io.findmat( file_ps );

[data, labels, freqs, t] = bfw.load_time_frequency_measure( mats ...
  , 'get_labels_func', @(file) file.labels ...
);

no_527 = findnone( labels, 'day__05272017' );
keep( labels, no_527 );
data = data(no_527, :, :);

t = t * 1e3;

addcat( labels, 'measure' );

end